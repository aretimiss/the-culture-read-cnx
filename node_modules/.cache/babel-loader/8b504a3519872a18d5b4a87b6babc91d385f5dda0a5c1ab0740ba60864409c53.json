{"ast":null,"code":"import _objectSpread from \"C:/Users/Asus/Desktop/the-culture-read-cnx/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { HEADING_PATTERN, PDF_ROLE_TO_HTML_ROLE } from './constants.js';\nexport function isPdfRole(role) {\n  return role in PDF_ROLE_TO_HTML_ROLE;\n}\nexport function isStructTreeNode(node) {\n  return 'children' in node;\n}\nexport function isStructTreeNodeWithOnlyContentChild(node) {\n  if (!isStructTreeNode(node)) {\n    return false;\n  }\n  return node.children.length === 1 && 0 in node.children && 'id' in node.children[0];\n}\nexport function getRoleAttributes(node) {\n  const attributes = {};\n  if (isStructTreeNode(node)) {\n    const {\n      role\n    } = node;\n    const matches = role.match(HEADING_PATTERN);\n    if (matches) {\n      attributes.role = 'heading';\n      attributes['aria-level'] = Number(matches[1]);\n    } else if (isPdfRole(role)) {\n      const htmlRole = PDF_ROLE_TO_HTML_ROLE[role];\n      if (htmlRole) {\n        attributes.role = htmlRole;\n      }\n    }\n  }\n  return attributes;\n}\nexport function getBaseAttributes(node) {\n  const attributes = {};\n  if (isStructTreeNode(node)) {\n    if (node.alt !== undefined) {\n      attributes['aria-label'] = node.alt;\n    }\n    if (node.lang !== undefined) {\n      attributes.lang = node.lang;\n    }\n    if (isStructTreeNodeWithOnlyContentChild(node)) {\n      const [child] = node.children;\n      if (child) {\n        const childAttributes = getBaseAttributes(child);\n        return _objectSpread(_objectSpread({}, attributes), childAttributes);\n      }\n    }\n  } else if ('id' in node) {\n    attributes['aria-owns'] = node.id;\n  }\n  return attributes;\n}\nexport function getAttributes(node) {\n  if (!node) {\n    return null;\n  }\n  return _objectSpread(_objectSpread({}, getRoleAttributes(node)), getBaseAttributes(node));\n}","map":{"version":3,"names":["HEADING_PATTERN","PDF_ROLE_TO_HTML_ROLE","isPdfRole","role","isStructTreeNode","node","isStructTreeNodeWithOnlyContentChild","children","length","getRoleAttributes","attributes","matches","match","Number","htmlRole","getBaseAttributes","alt","undefined","lang","child","childAttributes","_objectSpread","id","getAttributes"],"sources":["C:/Users/Asus/Desktop/the-culture-read-cnx/node_modules/react-pdf/dist/shared/structTreeUtils.js"],"sourcesContent":["import { HEADING_PATTERN, PDF_ROLE_TO_HTML_ROLE } from './constants.js';\nexport function isPdfRole(role) {\n    return role in PDF_ROLE_TO_HTML_ROLE;\n}\nexport function isStructTreeNode(node) {\n    return 'children' in node;\n}\nexport function isStructTreeNodeWithOnlyContentChild(node) {\n    if (!isStructTreeNode(node)) {\n        return false;\n    }\n    return node.children.length === 1 && 0 in node.children && 'id' in node.children[0];\n}\nexport function getRoleAttributes(node) {\n    const attributes = {};\n    if (isStructTreeNode(node)) {\n        const { role } = node;\n        const matches = role.match(HEADING_PATTERN);\n        if (matches) {\n            attributes.role = 'heading';\n            attributes['aria-level'] = Number(matches[1]);\n        }\n        else if (isPdfRole(role)) {\n            const htmlRole = PDF_ROLE_TO_HTML_ROLE[role];\n            if (htmlRole) {\n                attributes.role = htmlRole;\n            }\n        }\n    }\n    return attributes;\n}\nexport function getBaseAttributes(node) {\n    const attributes = {};\n    if (isStructTreeNode(node)) {\n        if (node.alt !== undefined) {\n            attributes['aria-label'] = node.alt;\n        }\n        if (node.lang !== undefined) {\n            attributes.lang = node.lang;\n        }\n        if (isStructTreeNodeWithOnlyContentChild(node)) {\n            const [child] = node.children;\n            if (child) {\n                const childAttributes = getBaseAttributes(child);\n                return {\n                    ...attributes,\n                    ...childAttributes,\n                };\n            }\n        }\n    }\n    else if ('id' in node) {\n        attributes['aria-owns'] = node.id;\n    }\n    return attributes;\n}\nexport function getAttributes(node) {\n    if (!node) {\n        return null;\n    }\n    return {\n        ...getRoleAttributes(node),\n        ...getBaseAttributes(node),\n    };\n}\n"],"mappings":";AAAA,SAASA,eAAe,EAAEC,qBAAqB,QAAQ,gBAAgB;AACvE,OAAO,SAASC,SAASA,CAACC,IAAI,EAAE;EAC5B,OAAOA,IAAI,IAAIF,qBAAqB;AACxC;AACA,OAAO,SAASG,gBAAgBA,CAACC,IAAI,EAAE;EACnC,OAAO,UAAU,IAAIA,IAAI;AAC7B;AACA,OAAO,SAASC,oCAAoCA,CAACD,IAAI,EAAE;EACvD,IAAI,CAACD,gBAAgB,CAACC,IAAI,CAAC,EAAE;IACzB,OAAO,KAAK;EAChB;EACA,OAAOA,IAAI,CAACE,QAAQ,CAACC,MAAM,KAAK,CAAC,IAAI,CAAC,IAAIH,IAAI,CAACE,QAAQ,IAAI,IAAI,IAAIF,IAAI,CAACE,QAAQ,CAAC,CAAC,CAAC;AACvF;AACA,OAAO,SAASE,iBAAiBA,CAACJ,IAAI,EAAE;EACpC,MAAMK,UAAU,GAAG,CAAC,CAAC;EACrB,IAAIN,gBAAgB,CAACC,IAAI,CAAC,EAAE;IACxB,MAAM;MAAEF;IAAK,CAAC,GAAGE,IAAI;IACrB,MAAMM,OAAO,GAAGR,IAAI,CAACS,KAAK,CAACZ,eAAe,CAAC;IAC3C,IAAIW,OAAO,EAAE;MACTD,UAAU,CAACP,IAAI,GAAG,SAAS;MAC3BO,UAAU,CAAC,YAAY,CAAC,GAAGG,MAAM,CAACF,OAAO,CAAC,CAAC,CAAC,CAAC;IACjD,CAAC,MACI,IAAIT,SAAS,CAACC,IAAI,CAAC,EAAE;MACtB,MAAMW,QAAQ,GAAGb,qBAAqB,CAACE,IAAI,CAAC;MAC5C,IAAIW,QAAQ,EAAE;QACVJ,UAAU,CAACP,IAAI,GAAGW,QAAQ;MAC9B;IACJ;EACJ;EACA,OAAOJ,UAAU;AACrB;AACA,OAAO,SAASK,iBAAiBA,CAACV,IAAI,EAAE;EACpC,MAAMK,UAAU,GAAG,CAAC,CAAC;EACrB,IAAIN,gBAAgB,CAACC,IAAI,CAAC,EAAE;IACxB,IAAIA,IAAI,CAACW,GAAG,KAAKC,SAAS,EAAE;MACxBP,UAAU,CAAC,YAAY,CAAC,GAAGL,IAAI,CAACW,GAAG;IACvC;IACA,IAAIX,IAAI,CAACa,IAAI,KAAKD,SAAS,EAAE;MACzBP,UAAU,CAACQ,IAAI,GAAGb,IAAI,CAACa,IAAI;IAC/B;IACA,IAAIZ,oCAAoC,CAACD,IAAI,CAAC,EAAE;MAC5C,MAAM,CAACc,KAAK,CAAC,GAAGd,IAAI,CAACE,QAAQ;MAC7B,IAAIY,KAAK,EAAE;QACP,MAAMC,eAAe,GAAGL,iBAAiB,CAACI,KAAK,CAAC;QAChD,OAAAE,aAAA,CAAAA,aAAA,KACOX,UAAU,GACVU,eAAe;MAE1B;IACJ;EACJ,CAAC,MACI,IAAI,IAAI,IAAIf,IAAI,EAAE;IACnBK,UAAU,CAAC,WAAW,CAAC,GAAGL,IAAI,CAACiB,EAAE;EACrC;EACA,OAAOZ,UAAU;AACrB;AACA,OAAO,SAASa,aAAaA,CAAClB,IAAI,EAAE;EAChC,IAAI,CAACA,IAAI,EAAE;IACP,OAAO,IAAI;EACf;EACA,OAAAgB,aAAA,CAAAA,aAAA,KACOZ,iBAAiB,CAACJ,IAAI,CAAC,GACvBU,iBAAiB,CAACV,IAAI,CAAC;AAElC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}