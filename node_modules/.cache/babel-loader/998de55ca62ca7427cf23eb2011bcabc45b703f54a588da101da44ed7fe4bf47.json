{"ast":null,"code":"// src/lib/i18nPick.js\n// รับค่า Omeka S ที่เป็น array ของ value objects:\n// [{ \"@value\": \"Title TH\", \"@language\": \"th\" }, { \"@value\": \"Title EN\", \"@language\": \"en\" }]\n// คืนค่าที่ตรงกับภาษาปัจจุบัน, ถ้าไม่มี → ลอง fallback ตามลำดับ, ถ้ายังไม่มี → ตัวแรก\n\nconst ALIASES = {\n  // map alias → canonical\n  th: [\"th\"],\n  en: [\"en\", \"en-US\", \"en-GB\"],\n  lo: [\"lo\"],\n  // Lao\n  fil: [\"fil\", \"tl\"],\n  // Filipino/Tagalog\n  zh: [\"zh\", \"zh-CN\", \"zh-Hans\", \"zh-Hant\", \"zh-TW\", \"zh-HK\"]\n};\nconst CANONICAL = {\n  th: \"th\",\n  en: \"en\",\n  lo: \"lo\",\n  fil: \"fil\",\n  zh: \"zh\" // คุณจะเก็บใน Omeka เป็น zh-Hans / zh-Hant ก็ได้ (ดู fallback ด้านล่าง)\n};\nexport function normalizeLang(code = \"\") {\n  const c = String(code).trim();\n  if (!c) return \"\";\n  const low = c.toLowerCase();\n  // คืน alias group ถ้าพบ\n  for (const [canon, al] of Object.entries(ALIASES)) {\n    if (al.includes(low)) return canon;\n  }\n  return low;\n}\nexport function pickLang(values = [], current = \"en\", options = {}) {\n  var _values$0$Value, _values$;\n  if (!Array.isArray(values) || values.length === 0) return \"\";\n  const lang = normalizeLang(current) || \"en\";\n  const want = l => normalizeLang(l) === lang;\n\n  // 1) ตรงกับภาษาปัจจุบัน\n  const hit = values.find(v => want(v === null || v === void 0 ? void 0 : v[\"@language\"]));\n  if (hit !== null && hit !== void 0 && hit[\"@value\"]) return hit[\"@value\"];\n\n  // 2) fallback เฉพาะกรณีจีน: ถ้าเลือก zh แล้วไม่มี → ลอง zh-Hans, zh-Hant\n  if (lang === \"zh\") {\n    const zhCandidates = [\"zh-Hans\", \"zh-CN\", \"zh\", \"zh-Hant\", \"zh-TW\", \"zh-HK\"];\n    const zhHit = values.find(v => zhCandidates.includes(String(v === null || v === void 0 ? void 0 : v[\"@language\"])));\n    if (zhHit !== null && zhHit !== void 0 && zhHit[\"@value\"]) return zhHit[\"@value\"];\n  }\n\n  // 3) ถ้าไม่มีภาษานั้น ให้ fallback เป็นอังกฤษ\n  const enHit = values.find(v => normalizeLang(v === null || v === void 0 ? void 0 : v[\"@language\"]) === \"en\");\n  if (enHit !== null && enHit !== void 0 && enHit[\"@value\"]) return enHit[\"@value\"];\n\n  // 4) ไม่มีก็เลือกตัวแรก\n  return (_values$0$Value = (_values$ = values[0]) === null || _values$ === void 0 ? void 0 : _values$[\"@value\"]) !== null && _values$0$Value !== void 0 ? _values$0$Value : \"\";\n}","map":{"version":3,"names":["ALIASES","th","en","lo","fil","zh","CANONICAL","normalizeLang","code","c","String","trim","low","toLowerCase","canon","al","Object","entries","includes","pickLang","values","current","options","_values$0$Value","_values$","Array","isArray","length","lang","want","l","hit","find","v","zhCandidates","zhHit","enHit"],"sources":["C:/Users/Asus/Desktop/the-culture-read-cnx/src/lib/i18nPick.js"],"sourcesContent":["// src/lib/i18nPick.js\r\n// รับค่า Omeka S ที่เป็น array ของ value objects:\r\n// [{ \"@value\": \"Title TH\", \"@language\": \"th\" }, { \"@value\": \"Title EN\", \"@language\": \"en\" }]\r\n// คืนค่าที่ตรงกับภาษาปัจจุบัน, ถ้าไม่มี → ลอง fallback ตามลำดับ, ถ้ายังไม่มี → ตัวแรก\r\n\r\nconst ALIASES = {\r\n  // map alias → canonical\r\n  th: [\"th\"],\r\n  en: [\"en\", \"en-US\", \"en-GB\"],\r\n  lo: [\"lo\"],             // Lao\r\n  fil: [\"fil\", \"tl\"],     // Filipino/Tagalog\r\n  zh: [\"zh\", \"zh-CN\", \"zh-Hans\", \"zh-Hant\", \"zh-TW\", \"zh-HK\"],\r\n};\r\n\r\nconst CANONICAL = {\r\n  th: \"th\",\r\n  en: \"en\",\r\n  lo: \"lo\",\r\n  fil: \"fil\",\r\n  zh: \"zh\", // คุณจะเก็บใน Omeka เป็น zh-Hans / zh-Hant ก็ได้ (ดู fallback ด้านล่าง)\r\n};\r\n\r\nexport function normalizeLang(code = \"\") {\r\n  const c = String(code).trim();\r\n  if (!c) return \"\";\r\n  const low = c.toLowerCase();\r\n  // คืน alias group ถ้าพบ\r\n  for (const [canon, al] of Object.entries(ALIASES)) {\r\n    if (al.includes(low)) return canon;\r\n  }\r\n  return low;\r\n}\r\n\r\nexport function pickLang(values = [], current = \"en\", options = {}) {\r\n  if (!Array.isArray(values) || values.length === 0) return \"\";\r\n\r\n  const lang = normalizeLang(current) || \"en\";\r\n  const want = (l) => normalizeLang(l) === lang;\r\n\r\n  // 1) ตรงกับภาษาปัจจุบัน\r\n  const hit = values.find((v) => want(v?.[\"@language\"]));\r\n  if (hit?.[\"@value\"]) return hit[\"@value\"];\r\n\r\n  // 2) fallback เฉพาะกรณีจีน: ถ้าเลือก zh แล้วไม่มี → ลอง zh-Hans, zh-Hant\r\n  if (lang === \"zh\") {\r\n    const zhCandidates = [\"zh-Hans\", \"zh-CN\", \"zh\", \"zh-Hant\", \"zh-TW\", \"zh-HK\"];\r\n    const zhHit = values.find((v) => zhCandidates.includes(String(v?.[\"@language\"])));\r\n    if (zhHit?.[\"@value\"]) return zhHit[\"@value\"];\r\n  }\r\n\r\n  // 3) ถ้าไม่มีภาษานั้น ให้ fallback เป็นอังกฤษ\r\n  const enHit = values.find((v) => normalizeLang(v?.[\"@language\"]) === \"en\");\r\n  if (enHit?.[\"@value\"]) return enHit[\"@value\"];\r\n\r\n  // 4) ไม่มีก็เลือกตัวแรก\r\n  return values[0]?.[\"@value\"] ?? \"\";\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}